
//-adaptivity and relativity

@mixin _desktop-small {
    @media (max-width: 1700px){
        @content;
    }
}

@mixin _tablet-big {
    @media (max-width: 1170px){
        @content;
    }
}

@mixin _tablet-middle {
    @media (max-width: 768px){
        @content;
    }
}

@mixin _tablet-small {
    @media (max-width: 600px){
        @content;
    }
}

@mixin _phone-big {
    @media (max-width: 480px){
        @content;
    }
}

@mixin _phone-small{
    @media (max-width: 370px){
        @content;
    }
}


//-flex

@mixin SetFlexJustify ($justify_content: flex-start) {

	justify-content: $justify_content;
}

@mixin SetFlexAlign ($align_items: flex-start) {

	align-items: $align_items;
}

@mixin ToVertical () {
	
	flex-direction: column;
}

@mixin ToHorizontal () {

	flex-direction: row;
}

@mixin ToVertical-inverse () {

	flex-direction: column-reverse;
}

@mixin ToHorizontal-inverse () {

	flex-direction: row-reverse;
}


//-text

@mixin SetFontFamily($font_family) {

	font-family: $font_family;
}

@mixin SetFontVars($font-weight, $letter-spacing, $color, $text-transform: inherit, $text-align: inherit) {
	
	font-weight: $font-weight;
	letter-spacing: $letter-spacing * 1em;
	color: $color;
	text-transform: $text-transform;
	text-align: $text-align;
}

@mixin SetTextAlign($text-align: inherit) {
	
	text-align: $text-align;
}

@mixin SetFontLineSize($vmin-scaler, $vw-scaler, $rem-scaler, $font-size, $line-height, $mode: desktop-middle) {

	$rem-font: ($rem-scaler * $font-size)/$font_size-global;
	$rem-line: ($rem-scaler * ($font-size + $line-height))/$font_size-global;

	$vmin-font: ($vmin-scaler * $font-size)/GetDeviceScreen($mode, horizontal);
	$vmin-line: ($vmin-scaler * ($font-size + $line-height))/GetDeviceScreen($mode, horizontal);

	$vw-font: ($vw-scaler * $font-size)/GetDeviceScreen($mode, horizontal);
	$vw-line: ($vw-scaler * ($font-size + $line-height))/GetDeviceScreen($mode, horizontal);
	
	font-size: calc(#{$rem-font} * 1rem + #{$vmin-font} * 100vmin + #{$vw-font} * 100vw);
	line-height: calc(#{$rem-line} * 1rem + #{$vmin-line} * 100vmin + #{$vw-line} * 100vw);
}


//-properties

@mixin SetBackground ($mode, $arg) {

	@if ($mode == solid)
	{
		background: $arg;
	}
	@else if ($mode == picture)
	{
		background: $arg  center 100% no-repeat;
		background-size: cover;
	}
}

@mixin SetPaddings ($up: 0, $down: 0, $right: 0, $left: 0) {
	padding-top: $up;
	padding-bottom: $down;
	padding-right: $right;
	padding-left: $left;
}

@mixin SetWidth-static ($width) {

	width: $width * 1px;
}

@mixin SetMargins ($orientation, $up-left: 0, $down-right: 0, $scaler: 1, $mode: desktop-middle) {

	@if($orientation == vertical)
	{
		margin-top: RelativeUnits($up-left, $scaler, $mode, $orientation);
		margin-bottom: RelativeUnits($down-right, $scaler, $mode, $orientation);
	}
	@else if ($orientation == horizontal)
	{
		margin-left: RelativeUnits($up-left, $scaler, $mode, $orientation);
		margin-right: RelativeUnits($down-right, $scaler, $mode, $orientation);
	}
}

@mixin SetPaddings ($orientation, $up-left: 0, $down-right: 0, $scaler: 1, $mode: desktop-middle) {

	@if($orientation == vertical)
	{
		padding-top: RelativeUnits($up-left, $scaler, $mode, $orientation);
		padding-bottom: RelativeUnits($down-right, $scaler, $mode, $orientation);
	}
	@else if ($orientation == horizontal)
	{
		padding-left: RelativeUnits($up-left, $scaler, $mode, $orientation);
		padding-right: RelativeUnits($down-right, $scaler, $mode, $orientation);
	}
}

@mixin SetWidth-responsive ($width, $scaler: 1, $mode: desktop-middle) {

	width: RelativeUnits($width, $scaler, $mode, horizontal);
}

//padding-top: calc(#{$scaler * $up/$phone-small} * 100vh + #{(1 - $scaler) * $up * 1px});
//padding-bottom: calc(#{$scaler * $down}/$phone-small} * 100vh + #{(1 - $scaler) * $down * 1px});


//-transforms

@mixin TransformXY ($OffsetX, $OffsetY, $scaler: 1, $mode: desktop-middle) {

	transform: translate(RelativeUnits(horizontal, $OffsetX, $scaler, $mode), RelativeUnits(vertical, $OffsetY, $scaler, $mode));
	-moz-transform: translate(RelativeUnits(horizontal, $OffsetX, $scaler, $mode), RelativeUnits(vertical, $OffsetY, $scaler, $mode)); /* Firefox 3.5+ */ 
	-webkit-transform: translate(RelativeUnits(horizontal, $OffsetX, $scaler, $mode), RelativeUnits(vertical, $OffsetY, $scaler, $mode)); /* Safari 3.1+ и Chrome 2.0+ */
	-o-transform: translate(RelativeUnits(horizontal, $OffsetX, $scaler, $mode), RelativeUnits(vertical, $OffsetY, $scaler, $mode)); /* Opera 10.5+ */
	-ms-transform: translate(RelativeUnits(horizontal, $OffsetX, $scaler, $mode), RelativeUnits(vertical, $OffsetY, $scaler, $mode)); /* IE 9.0 */
}

@mixin TransformScale ($ScaleX: 1, $ScaleY: 1) {
	transform: scale($ScaleX, $ScaleY);
	-moz-transform: scale($ScaleX, $ScaleY); /* Firefox 3.5+ */ 
	-webkit-transform: scale($ScaleX, $ScaleY); /* Safari 3.1+ и Chrome 2.0+ */
	-o-transform: scale($ScaleX, $ScaleY); /* Opera 10.5+ */
	-ms-transform: scale($ScaleX, $ScaleY); /* IE 9.0 */
}

@mixin TransformRotate ($Rotate) {
	transform: rotate($Rotate);
	-moz-transform: rotate($Rotate); /* Firefox 3.5+ */ 
	-webkit-transform: rotate($Rotate); /* Safari 3.1+ и Chrome 2.0+ */
	-o-transform: rotate($Rotate); /* Opera 10.5+ */
	-ms-transform: rotate($Rotate); /* IE 9.0 */
}
